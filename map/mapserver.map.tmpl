MAP
  NAME "ASB_SPT"

  UNITS DD

  SIZE 800 600

  IMAGETYPE PNG24

  EXTENT -180 -90 180 90

  PROJECTION
    "init=epsg:4326"
  END

  WEB
    METADATA
      ows_title "AusSeabed Survey Planning Tool"
      ows_enable_request "*"
      ows_srs "EPSG:4326 EPSG:25832 EPSG:25833 EPSG:3857"
      wms_feature_info_mime_type "application/json, application/geojson"
      wms_include_items "all"
      wms_enable_request "*"
    END
  END

  OUTPUTFORMAT
    NAME "application/geojson"
    MIMETYPE "application/json; subtype=geojson"
    DRIVER "OGR/GEOJSON"
    FORMATOPTION "STORAGE=stream"
    FORMATOPTION "FORM=SIMPLE"
  END


  OUTPUTFORMAT
    NAME "json"
    MIMETYPE "application/json"
    DRIVER "OGR/GEOJSON"
    FORMATOPTION "STORAGE=stream"
    FORMATOPTION "FORM=SIMPLE"
  END

  LAYER
    NAME "Survey_Plans"
    METADATA
      "wfs_title"         "Survey Plans" ##REQUIRED
      "wfs_srs"           "EPSG:4326" ## REQUIRED
      "gml_include_items" "all" ## Optional (serves all attributes for layer)
      "gml_featureid"     "id" ## REQUIRED
      "wfs_enable_request" "*"
      wms_enable_request "*"
      "ows_enable_request" "*"
      wms_getfeature_formatlist "application/json, application/geojson"
    END
    STATUS ON
    TEMPLATE "dummy.js"
    TYPE POLYGON
    CONNECTIONTYPE postgis

    CONNECTION "user={{ getenv "POSTGRES_USER" }} password={{ getenv "POSTGRES_PASSWORD" }} dbname={{ getenv "POSTGRES_DATABASE" }} host={{ getenv "POSTGRES_HOSTNAME" }} port={{ getenv "POSTGRES_PORT" }}"
    DATA "area_of_interest from (
            select sp.id as spid, commorgs.orgname as \"commissioningOrganisations\" ,sp.status, sp.\"startDate\", sp.\"endDate\", sp.\"contactPerson\", sp.email as \"contactEmail\" ,sp.comment as comments ,sp.area_of_interest as area_of_interest, sp.\"surveyName\", sa.group as category, sa.name as purpose, instmerge.instname as \"instrumentTypes\", dctmerge.dctname as \"dataCaptureTypes\", CASE WHEN (sp.status = 'Complete') THEN '#11A579' WHEN (sp.status = 'Scheduled') THEN '#E68310' WHEN (sp.status = 'Planning') THEN '#CF1C90' ELSE '#F2B701' END AS survey_color
            from survey_plan sp
            join survey_application sa on sp.\"surveyApplicationId\" = sa.id
            join record_state rs on sp.\"recordStateId\" = rs.id
            full outer join (
              SELECT survey_plan.id as id, string_agg(DISTINCT organisation.name, ', ') as orgname FROM survey_plan LEFT JOIN survey_plan_organisations_organisation ON survey_plan.id = survey_plan_organisations_organisation.\"surveyPlanId\" INNER JOIN organisation ON survey_plan_organisations_organisation.\"organisationId\" = organisation.id GROUP BY survey_plan.id
            ) commorgs on commorgs.id = sp.id
            full outer join (
              SELECT survey_plan.id as id, string_agg(DISTINCT custodian.name, ', ') as custname FROM survey_plan LEFT JOIN survey_plan_custodians_custodian ON survey_plan.id = survey_plan_custodians_custodian.\"surveyPlanId\" INNER JOIN custodian ON survey_plan_custodians_custodian.\"custodianId\" = custodian.id GROUP BY survey_plan.id
            ) custmerge on custmerge.id = sp.id
            full outer join (
              SELECT survey_plan.id as id, string_agg(DISTINCT instrument_type.name, ', ') as instname FROM survey_plan LEFT JOIN survey_plan_instrument_types_instrument_type ON survey_plan.id = survey_plan_instrument_types_instrument_type.\"surveyPlanId\" INNER JOIN instrument_type ON survey_plan_instrument_types_instrument_type.\"instrumentTypeId\" = instrument_type.id GROUP BY survey_plan.id
            ) instmerge on instmerge.id = sp.id
            full outer join (
              SELECT survey_plan.id as id, string_agg(DISTINCT data_capture_type.name, ', ') as dctname FROM survey_plan LEFT JOIN survey_plan_data_capture_types_data_capture_type ON survey_plan.id = survey_plan_data_capture_types_data_capture_type.\"surveyPlanId\" INNER JOIN data_capture_type ON survey_plan_data_capture_types_data_capture_type.\"dataCaptureTypeId\" = data_capture_type.id GROUP BY survey_plan.id
            ) dctmerge on dctmerge.id = sp.id
            WHERE sp.deleted = false AND sp.public = true AND rs.state = 'finalised'
          ) as subquery using unique spid"
    CLASS
      STYLE
        OUTLINECOLOR [survey_color]
        WIDTH 2
      END
      STYLE
        COLOR [survey_color]
        OPACITY 30
      END
    END
  END



  LAYER
    NAME "Priority_Area_Submissions"
    METADATA
      "wfs_title"         "Priority Area Submissions" ##REQUIRED
      "wfs_srs"           "EPSG:4326" ## REQUIRED
      "gml_include_items" "all" ## Optional (serves all attributes for layer)
      "gml_featureid"     "id" ## REQUIRED
      "wfs_enable_request" "*"
      wms_enable_request "*"
      "ows_enable_request" "*"
      wms_getfeature_formatlist "application/json, application/geojson"
    END
    STATUS ON
    TEMPLATE "dummy.js"
    TYPE POLYGON
    CONNECTIONTYPE postgis

    CONNECTION "user={{ getenv "POSTGRES_USER" }} password={{ getenv "POSTGRES_PASSWORD" }} dbname={{ getenv "POSTGRES_DATABASE" }} host={{ getenv "POSTGRES_HOSTNAME" }} port={{ getenv "POSTGRES_PORT" }}"

    DATA "geom from (
            select pa.id as paid ,pa.name as name ,pa.geom as geom
            from priority_area pa
            join priority_area_submission pas on pa.\"priorityAreaSubmissionSubmissionId\" = pas.id
            join record_state rs on pas.\"recordStateId\" = rs.id
            where rs.state = 'published'
          ) as subquery using unique paid using srid=4326"

    CLASS
      STYLE
        OUTLINECOLOR "#FFFB0D"
        WIDTH 2
      END
      STYLE
        COLOR "#FFFB0D"
        OPACITY 30
      END
    END
  END



END
